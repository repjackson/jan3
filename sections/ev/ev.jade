template(name='ev')
    .ui.padded.stackable.grid.container
        .row
            .sixteen.wide.column
                h1.ui.center.aligned.header
                    i.database.icon
                    | EV API
                // +tag_facet
                .ui.four.stackable.cards
                    +children_widget type='report' label='Reports' icon='newspaper' link='/reports'
                    +children_widget type='field' label='Fields' icon='cubes' link='/ev_fields'
                    +children_widget type='user' label='Users' icon='users' link='/ev_users'
                    +children_widget type='jpid' label='JP Ids' icon='hashtag' link='/jpids'
                    +children_widget type='area' label='Areas' icon='clone' link='/areas'

template(name='ev_reports')
    .ui.padded.stackable.grid
        .row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .ten.wide.column
                .ui.center.aligned.header
                    i.compass.icon
                    | EV Reports
                // .call_ev.ui.fluid.button Call EV API
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Reports selector=selector class="ui sortable striped table"}}

                    
                    
template(name='ev_card')                    
    .card
        if report_title
            .content
                a.header(href="/view/#{_id}") #{report_title}
                .meta #{report_subtitle}
        .content
            with ev
                if CUSTOMER
                    +view_customer_name_field
                if CUST_NAME
                    +view_customer_name_field
                if TELEPHONE
                    +view_telephone_field
                if MASTER_LICENSEE
                    +view_master_field
                if FRANCHISEE
                    +view_franchisee_field
                if FRANCH_NAME
                    +view_franchisee_field
            .ui.list
                if report_id
                    .item id: #{report_id}
                    .item type: #{report_type}
                if children.count
                    .item #{children.count} Child Docs
            if ADDR_STREET
                .ui.list
                    .item #{ADDR_STREET}
                    .item #{ADDR_CITY}, #{ADDR_STATE}
                    .item #{ADDR_POSTAL_CODE}
                    .item #{CUST_REG_SERVICE_AMT}
        .content
            +jsonView json=ev    
        .content
            +view_button
            +edit_button
                
template(name='report_edit')
    .ui.padded.stackable.centered.grid
        .centered.row
            .four.wide.column
                h1.ui.center.aligned.grey.header Edit ##{report_id} #{report_title} Report
                +save_button
                #delete.ui.icon.button
                    i.trash.icon
            .twelve.wide.column
                .ui.form
                    // +edit_text_field key='text' label='Title'
                    // +edit_text_field key='image_url' label='Image URL'
                    // +edit_text_field key='icon' label='Icon'
                    +edit_array_field key='tags' label='Relationship to parent'
                    +edit_html
        
        
template(name='report_view')
    .ui.padded.stackable.centered.grid
        .centered.row
            .three.wide.column
                +link_button link='/reports' icon='newspaper' label='Reports'
            .ten.wide.column
                h1.ui.center.aligned.grey.header ##{report_id} #{report_title} Report
            .three.wide.column
                +edit_button
                unless children.length
                    .run_report.ui.button
                        i.refresh.icon
                        |Run Report
        .centered.row
            .sixteen.wide.column
                .ui.segment
                    each tags
                        .ui.basic.label #{this}
                    .ui.basic.segment
                        // |#{current_doc}
                        .ui.list
                            .item report id: #{report_id}
                            .item report_type: #{report_type}
                            .item report_subtitle: #{report_subtitle}
                .ui.centered.cards
                    each children
                        +ev_card
                        
                        
                        
template(name='view_customer_name_field')
    div
        a(href="/customer/#{CUSTOMER}")
            i.handshake.icon(title='Customer')
            |#{CUSTOMER}

template(name='view_master_field')
    h5
        a(href="/master/#{MASTER_LICENSEE}" title='Master Licensee')
            i.street.view.icon
            |#{MASTER_LICENSEE}


template(name='view_franchisee_field')
    h5
        if FRANCH_NAME
            a(href="/franchisee/#{FRANCH_NAME}" title='Franchisee')
                i.user.circle.icon
                | #{FRANCH_NAME}
        if FRANCHISEE
            a(href="/franchisee/#{FRANCHISEE}" title='Franchisee')
                i.user.circle.icon
                | #{FRANCHISEE}


template(name='children_widget')
    .ui.card
        .content
            a.ui.icon.header(href=link)
                i.icon(class=icon)
                .content
                    |#{label}
            .ui.list
                each children
                    a.item(href="/view/#{_id}") #{name} #{title} !{html}
    
    
template(name='ev_fields')
    .ui.padded.stackable.grid
        .row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .ten.wide.column
                .ui.center.aligned.header
                    i.cubes.icon
                    | EV Fields
            .three.wide.column
                .sync_ev_fields.ui.fluid.button Sync EV Fields
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Fields selector=selector class="ui sortable striped table"}}


template(name='ev_users')
    .ui.padded.stackable.grid
        .row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .ten.wide.column
                .ui.center.aligned.header
                    i.users.icon
                    | EV Users
            .three.wide.column
                .sync_ev_users.ui.fluid.button Sync EV Users
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Users selector=selector class="ui sortable striped table"}}


template(name='user_view')
    .ui.padded.stackable.centered.grid
        .centered.row
            .three.wide.column
                +link_button link='/users' icon='newspaper' label='users'
            .ten.wide.column
                h1.ui.center.aligned.grey.header ##{user_id} #{user_title} user
            .three.wide.column
                +edit_button
                unless children.length
                    .get_user_info.ui.button
                        i.refresh.icon
                        | Get User Info
        .centered.row
            .sixteen.wide.column
                .ui.segment
                    each tags
                        .ui.basic.label #{this}
                    .ui.basic.segment
                        // |#{current_doc}
                        .ui.list
                            .item user id: #{user_id}
                            .item user_type: #{user_first_name}
                            .item user_subtitle: #{user_last_name}
      
      
template(name='jpid_view')
    .ui.padded.stackable.centered.grid
        .centered.row
            .three.wide.column
                +link_button link='/jpids' icon='hashtag' label='JP Ids'
            .ten.wide.column
                h1.ui.center.aligned.grey.header ##{jpid} JP Id
            .three.wide.column
                // +edit_button
        .centered.row
            .sixteen.wide.column
                +jsonView json=ev
            
            
template(name='jpids')
    .ui.padded.stackable.grid
        .row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .eight.wide.column
                .ui.center.aligned.header
                    i.hashtag.icon
                    | JP Id's
            .four.wide.column
                .ui.icon.input
                    i.search.icon  
                    input#jp_lookup(type='text' placeholder='Lookup Jan-Pro Id')
                // .ui.icon.input
                //     i.search.icon  
                //     input#office_lookup(type='text' placeholder='Lookup Office Name')
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Jpids selector=selector class="ui sortable striped table"}}

                    
                    
template(name='areas')
    .ui.padded.stackable.grid
        .row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .twelve.wide.column
                .ui.center.aligned.header
                    i.clone.icon
                    | EV Areas
                p
                    |This key concept is used to define a structure where you may define multiple tracking systems within a single instance of ExtraView. Each of these tracking systems is termed a Business Area, and each of these Business Areas may have its own set of screens, fields, processes, rules and workflow. Business Areas may also share these objects. An administrator may have control over the entire installation or sub-administrator roles may be created, each having control over a part of the installation. With this capability, ExtraView is termed a multi-tenanted database.


        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Areas selector=selector class="ui sortable striped table"}}

                    
                    
