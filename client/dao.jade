template(name='dao')
    #dash_header.ui.masthead.center.aligned.stackable.grid
        .middle.aligned.row
            .two.wide.column
                img.ui.small.centered.image(src='https://jan-pro.com/wp-content/themes/underboot/img/jan-pro-white.svg')
            .eleven.wide.column
                .ui.inverted.blue.large.menu
                    a.item(href="/dashboard")
                        i.dashboard.icon
                        | Dashboard
                    a.item(href='/communication')
                        i.chat.icon
                        | Communication
                    a.item(href='/feed')
                        i.feed.icon
                        | Feed
                // if facet_doc
                //     +type_filter
            .three.wide.column
                if currentUser
                    a.ui.icon.blue.button(href='/account/settings' class="{{ active_route 'account' }}" )
                        if currentUser.image_id
                            i.large.icon
                                img.ui.image(src="{{c.url currentUser.image_id width=50 height=50 gravity='face' crop='fill'}}")
                        else
                            i.user.large.icon
                        |#{currentUser.username}
                    a#logout.ui.icon.blue.button(href='#')
                        if signing_out
                            i.notched.circle.loading.large.icon
                        else
                            i.sign.out.alternate.large.icon
                else
                    a.ui.icon.blue.button(href='/login')
                        i.large.icon
                            +icon name='internal'
                        | &nbsp; Log In
    .ui.stackable.padded.grid
        unless facet_doc
            .row
                .sixteen.wide.column
                    if currentUser
                        .create_facet.ui.button(title='Create Session')
                            i.plus.icon
                            |Create Session
        if facet_doc
            .four.wide.column.scrolling
                // +type_filter
                if current_type
                    .ui.fluid.large.basic.active.button.clear_current_type
                        if current_type.icon
                            // i.large.icon
                            +icon name=current_type.icon classes='spaced'
                        strong #{current_type.title}
                else
                    .ui.large.center.aligned.header
                        +icon name='dashboard'
                        |Dashboard

                .ui.icon.button.delete_facet(title='Clear Session')
                    i.remove.icon
                if schema_doc
                    each faceted_fields
                        +filter

            .twelve.wide.column
                .ui.equal.width.stackable.grid
                    if current_type
                        .column
                            if is_calculating
                                // i.large.loading.refresh.icon
                                .ui.hidden.divider
                                .ui.active.indeterminate.massive.centered.inline.loader
                                    // |Calculating filters and results
                            else
                                if is_dev
                                    .ui.icon.button.show_facet
                                        i.code.icon
                                    +toggle_facet_config key='config_mode' title='Schema Configuration' label='Configure' icon='administrative-tools'
                                +toggle_facet_config key='view_full' title='View Full' icon='resize-diagonal' label='Expand'
                                if facet_doc.config_mode
                                    .ui.header
                                        +icon name='administrative-tools'
                                        | Edit Schema '#{current_type.title}'
                                    .ui.small.header
                                        +icon name='rename'
                                        |&nbsp;
                                        |Fields
                                    .ui.fluid.button.add_field
                                        i.plus.icon
                                        | Field
                                    each fields
                                        +facet_segment data=_id
                                else if facet_doc.result_ids
                                    if facet_doc.result_ids.length
                                        .ui.horizontal.list
                                            if can_add
                                                .item
                                                    .ui.button.add_doc
                                                        i.plus.icon
                                                        |Add #{current_type.title}
                                            .item
                                                +set_page_size value=10
                                                +set_page_size value=20
                                                +set_page_size value=50
                                            .item
                                                if facet_doc.page_amount
                                                    a.ui.icon.small.page_down.button(title='Previous Page')
                                                        i.left.chevron.grey.icon
                                                    .ui.small.label
                                                        | #{facet_doc.current_page}/#{facet_doc.page_amount}
                                                    a.ui.icon.small.page_up.button(title='Next Page')
                                                        i.right.chevron.grey.icon
                                                    // if show_increment
                                            .item
                                                .ui.label #{facet_doc.total} Results
                                        .scrolling.ui.segments
                                            each facet_doc.result_ids
                                                +facet_segment
                                else
                                    |No results
                        if facet_doc.viewing_detail
                            .column.scrolling
                                +detail_pane
                    else
                        .column
                            +type_filter

template(name='toggle_facet_config')
    if boolean_true
        .ui.blue.button.disable_key(title=title)
            i.icon
                +icon name=icon
            | #{label}
    else
        .ui.button.enable_key
            i.icon
                +icon name=icon
            | #{label}


template(name='detail_pane')
    unless facet_doc.editing_mode
        a.ui.center.aligned.header.close_details(href='#')
            if detail_doc.icon
                i.icon
                    +icon name=detail_doc.icon
            |#{detail_doc.title} Details
    if facet_doc.editing_mode
        a.ui.center.aligned.header.close_details(href='#')
            if detail_doc.icon
                i.icon
                    +icon name=detail_doc.icon
            |Edit #{detail_doc.title}
        .ui.hidden.divider
        .ui.icon.fluid.button.disable_editing(title='Save')
            i.green.checkmark.large.icon
            // |Save
    .ui.hidden.divider
    .ui.form
        each fields
            .field
                if facet_doc.editing_mode
                    +field_edit
                else
                    +field_view
    if facet_doc.editing_mode
        .ui.button.remove_doc
            i.red.remove.icon
            |Delete
    unless facet_doc.editing_mode
        each axons
            .ui.button.select_axon(class=axon_selector_class)
                if icon
                    i.icon
                        +icon name=icon
                |#{title}
        if facet_doc.viewing_children
            +children_view
        if can_edit
            .ui.hidden.divider
            .ui.icon.fluid.button.enable_editing
                i.pencil.large.icon
                // |Edit



template(name='children_view')
    if axon_schema
        .ui.header #{axon_schema.title}
    else
        |No schema found.



template(name='draft')
    .ui.header
        | Edit Draft
        i.right.chevron.icon
    with draft_doc
        .content
            .ui.list
                each draft_fields
                    +field_edit
    .ui.button.submit_draft Save
    .ui.button.cancel_draft Cancel



template(name='set_page_size')
    .ui.small.compact.button.set_page_size(class=page_size_class title='Set Page Size') #{value}

template(name='set_facet_key')
    .ui.button.set_facet_key(class=set_facet_key_class)
        |#{label}


template(name='type_filter')
    // img.ui.avatar.spaced.image(src="{{c.url 'logo_small' width=50 height=50 gravity='face' crop='fill'}}")
    .ui.centered.stackable.four.cards
        each faceted_types
            .ui.link.card.set_type(class=set_type_class)
                .content
                    if icon
                        .right.floated.mini.ui.image
                            +iconlarge name=icon
                    .header
                        |#{title}
                    .description
                        each tags
                            .ui.basic.label #{this}

        // .ui.large.labeled.icon.button.set_type(class=set_type_class)
        //     if icon
        //         i.icon
        //             +icon name=icon
        //     |#{title}


template(name='filter')
    .ui.header
        if icon
            i.icon
                +iconsmall name=icon
        |#{title}
    each values
        +selector


template(name='selector')
    .ui.toggle_value.compact.button(class=toggle_value_class)
        |#{name}
        small #{count}


template(name='edit_field_text')
    .ui.labeled.fluid.input
        .ui.basic.label(title=key) #{label}
        input.text_val(type='text' value=field_value)

template(name='edit_field_number')
    .ui.labeled.fluid.input
        .ui.basic.label(title=key) #{label}
        input.number_val(type='number' value=field_value)


template(name='facet_segment')
    with local_doc
        .ui.segment.facet_segment(class=facet_segment_class)
            // if doc_header_fields
            .content
                h3.ui.header
                    if icon
                        +icon name=icon
                    each doc_header_fields
                        |#{value}
            if facet_doc.view_full
                .content
                    p
                    .ui.list
                        each field_docs
                            if value
                                .item
                                    if field_template
                                        +Template.dynamic template=field_template
                                    else
                                        .content
                                            if icon
                                                i.large.icon
                                                    +icon name=icon
                                            | #{title}
                                            |&nbsp;
                                            if is_array
                                                each value
                                                    .ui.basic.label #{this}
                                            else
                                                strong #{value}


template(name='boolean_facet')
    .ui.header filter #{key}
    .pick_yes.ui.button yes
    .pick_no.ui.button no


template(name='icon')
    img.ui.mini.image(src="https://png.icons8.com/color/80/000000/#{name}.png" class=classes data-content=popup title=title)

template(name='iconlarge')
    img.ui.image(src="https://png.icons8.com/color/96/000000/#{name}.png" class=classes title=title)

template(name='iconsmall')
    img.ui.inline.image(src="https://png.icons8.com/color/24/000000/#{name}.png" class=classes title=title)


template(name='tag_result')
    .three.wide.column #{title} #{office_name} #{name}



template(name='cell_number')
    .ui.fluid.input
        input#cell_number(type='number' min='0' value=cell_value)




template(name='cell_date')
    .ui.icon.fluid.input
        input#date_field(type='date' value=cell_value)


template(name='ticket_assignment_cell')
    // td(class=ticket_assignment_cell_class)
    if overdue
        +icon name='expired' classes='inline' title='Over 5 Hours'
    if response
        |#{response}
    .ui.list
        each assigned_users
            .item
                // .image
                //     img.ui.avatar.image(src="{{c.url image_id width=100 height=100 gravity='face' crop='fill'}}")
                .content
                    .header
                        // if image_id
                        //     img.ui.avatar.spaced.image(src="{{c.url image_id width=100 height=100 gravity='face' crop='fill'}}")
                        |#{first_name} #{last_name}
                    .description
                        | @#{username}

template(name='when_template')
    div(title="{{ long_format timestamp }}")
        |#{when}


template(name='status_template')
    if open
        // +icon name='inactive-state' title='Open'
        .ui.basic.label Open
    else
        .ui.basic.label Closed
        // +icon name='ok' title='Closed'

template(name='submitted_template')
    if submitted
        // .ui.basic.label Submitted
        div {{ long_format submitted_datetime }}
    // else
        // .ui.label Not Submitted

template(name='search_key')
    .ui.icon.input
        i.search.icon
        input.search_key(type='text')


template(name='sort_column_header')
    th.sort_by(class=classes)
        |#{label}
        if sort_descending
            i.chevron.down.link.blue.icon
        else if sort_ascending
            i.chevron.up.link.blue.icon
        else
            i.sort.link.grey.icon

template(name='query_input')
    .ui.icon.fluid.input
        if current_query
            i.clear_search.link.remove.icon
        else
            i.link.search.icon
        input#query(type='text' placeholder=placeholder value=current_query)
