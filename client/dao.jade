template(name='dao')
    .ui.stackable.padded.grid
        unless facet_doc
            .row
                .sixteen.wide.column
                    if currentUser
                        .create_facet.ui.icon.button(title='Create Session')
                            i.plus.icon
        else
            .row
                .three.wide.column
                    .ui.icon.fluid.input
                        if current_query
                            i.clear_search.link.remove.icon
                        else
                            i.link.search.icon
                        input#query(type='text' placeholder=placeholder value=current_query)
                .six.wide.middle.aligned.column
                    .ui.inline.dropdown
                        .default.text 10
                        i.dropdown.icon
                        .menu
                            +set_page_size value=10
                            +set_page_size value=20
                            +set_page_size value=50
                        | #{facet_doc.skip_amount}
                        | /
                        | #{facet_doc.total}
                .three.wide.column
                    if facet_doc.page_amount
                        .ui.pagination.small.menu
                            // if show_decrement
                            a.icon.item.page_down
                                i.left.chevron.grey.icon
                            .ui.item
                                | #{facet_doc.current_page}/#{facet_doc.page_amount}
                                // .menu
                                //     a.set_page_number.item(class=pagination_item_class) 1
                                //     a.set_page_number.item(class=pagination_item_class) 2
                            a.icon.item.page_up
                                i.right.chevron.grey.icon
                            // if show_increment

                .right.floated.three.wide.column
                    if editing_mode
                        .ui.icon.button.delete_facet
                            i.blue.remove.icon
                    .set_view_cards.ui.button(class=view_cards_class)
                        +iconsmall name='activity-grid-2'
                    // .set_view_segments.ui.button(class=view_segments_class)
                    //     +iconsmall name='menu'
                    .set_view_table.ui.button(class=view_table_class)
                        +iconsmall name='data-sheet-filled'
            .row
                .sixteen.wide.column
                    +type_filter
        .row
            if facet_doc
                .three.wide.column
                    if editing_mode
                        .ui.button.show_facet log
                        .ui.button.add_doc + Doc
                        .ui.button.add_field + Field
                    if schema_doc
                        each faceted_fields
                            +filter
                .thirteen.wide.column
                    if is_calculating
                        // i.large.loading.refresh.icon
                        .ui.active.indeterminate.massive.centered.inline.loader
                            // |Calculating filters and results
                    else
                        if facet_doc.result_ids
                            if facet_doc.result_ids.length
                                if view_segments
                                    each facet_doc.result_ids
                                        +facet_segment
                                if view_table
                                    +facet_table
                                if view_cards
                                    .ui.three.stackable.cards
                                        each facet_doc.result_ids
                                            // .card
                                                // .ui.header #{this}
                                            +facet_card
                                            // .ui.header #{this}
                            else
                                .ui.center.aligned.header
                                    | Choose type to calculate
                        else
                            |No results
                if editing_mode
                    .ui.dividing.header
                        i.clone.icon
                        |Fields
                    .ui.stackable.cards
                        each fields
                            +edit_field


template(name='edit_field')
    .card(class=ticket_color_class)
        .content
            h4.header
                if icon
                    +iconsmall name=icon
                |#{title}
        .content
            +edit_field_text key='title' label='Title' filter_id=this._id
            +edit_field_text key='key' label='Key' filter_id=this._id
            +edit_field_text key='icon' label='Icon' filter_id=this._id
            +edit_field_text key='field_type' label='Field Type' filter_id=this._id
            +edit_field_boolean key='faceted' label='Faceted'
            +edit_field_boolean key='visible' label='Visible'
            +edit_field_boolean key='sortable' label='Sortable'
            +edit_field_boolean key='card_header' label='Card Header'
        .content
            .ui.icon.remove_field.button
                i.remove.icon

template(name='edit_field_boolean')
    if is_true
        .ui.primary.button.set_false #{label}
    else
        .ui.button.set_true #{label}

template(name='edit_doc_boolean')
    if is_true
        .ui.primary.button.set_false #{label}
    else
        .ui.button.set_true #{label}



template(name='set_page_size')
    .item.set_page_size #{value}

template(name='set_facet_key')
    .ui.button.small.compact.set_facet_key(class=set_facet_key_class)
        |#{label}


template(name='type_filter')
    // .ui.small.header
    //     +icon name='category'
    //     |Sections
    each faceted_types
        .ui.button.set_type(class=set_type_class)
            if icon
                i.icon
                    +iconsmall name=icon
            |#{title}


template(name='filter')
    .ui.small.header
        if icon
            +icon name=icon
        |#{title}
    if editing_mode
        .item key: #{key}
    each values
        +selector


template(name='selector')
    .ui.small.compact.toggle_value.button(class=toggle_value_class)
        |#{selector_value}
        small #{count}


template(name='edit_field_text')
    .ui.labeled.fluid.input
        .ui.basic.label #{key}
        input.text_val(type='text' value=field_value)




template(name='facet_table')
    table.ui.striped.fixed.table(class=table_classes)
        thead
            tr
                each visible_fields
                    +table_column_header
        tbody
            each facet_doc.result_ids
                +dao_table_row

template(name='table_column_header')
    if visible
        if sortable
            th.sort_key.single.line
                |#{title}
                if is_sorting
                    |&nbsp;
                    i.loading.refresh.grey.icon
                else if sort_descending
                    i.chevron.down.link.icon
                else if sort_ascending
                    i.chevron.up.link.icon
                else
                    i.sort.link.grey.icon
        else
            th.single.line
                |#{title}


template(name='dao_table_row')
    with local_doc
        tr
            each visible_fields
                td
                    if field_template
                        +Template.dynamic template=field_template data=local_doc
                    else
                        |#{value}


template(name='facet_card')
    with local_doc
        .card(class=ticket_color_class)
            // if doc_header_fields
            .content
                h4.header
                    if icon
                        +iconsmall name=icon
                    each doc_header_fields
                        |#{value}
            .content
                .ui.list
                    each field_docs
                        +field_doc
            .content
                if editing_mode
                    .ui.icon.button.remove_doc
                        i.remove.icon

template(name='field_doc')
    unless editing_mode
        if field_template
            +Template.dynamic template=field_template
        else
            .item
                |#{title}:
                strong #{value}
    if editing_mode
        if is_boolean
            if is_true
                .ui.primary.button.set_false #{label}
            else
                .ui.button.set_true #{label}
        if is_array
            .ui.blue.segment
                .ui.fluid.labeled.small.input
                    .ui.basic.label #{title}
                    input.add_array_element(type='text' placholder='add')
                if value
                    each value
                        .ui.label
                            |#{this}
                            i.pull_element.remove.link.icon
        else
            .ui.fluid.labeled.small.input
                .ui.basic.label #{title}
                input.text_field_val(type='text' value=value)


template(name='boolean_facet')
    .ui.small.header filter #{key}
    .pick_yes.ui.button yes
    .pick_no.ui.button no

template(name='bool_switch')
    .ui.button.toggle_field(class=bool_switch_class)
        |#{key}


template(name='icon')
    img.ui.mini.image(src="https://png.icons8.com/ultraviolet/80/000000/#{name}.png" class=classes data-content=popup title=title)

template(name='iconlarge')
    img.ui.image(src="https://png.icons8.com/ultraviolet/80/000000/#{name}.png")

template(name='iconsmall')
    img.ui.inline.image(src="https://png.icons8.com/ultraviolet/24/000000/#{name}.png" class=classes title=title)


template(name='tag_result')
    .three.wide.column #{title} #{office_name} #{name}



template(name='cell_number')
    .ui.fluid.input
        input#cell_number(type='number' min='0' value=cell_value)




template(name='cell_date')
    .ui.icon.fluid.input
        input#date_field(type='date' value=cell_value)


template(name='ticket_assignment_cell')
    // td(class=ticket_assignment_cell_class)
    if overdue
        +iconsmall name='expired' classes='inline' title='Over 5 Hours'
    if response
        |#{response}
    .ui.list
        each assigned_users
            .item
                // .image
                //     img.ui.avatar.image(src="{{c.url image_id width=100 height=100 gravity='face' crop='fill'}}")
                .content
                    .header
                        // if image_id
                        //     img.ui.avatar.spaced.image(src="{{c.url image_id width=100 height=100 gravity='face' crop='fill'}}")
                        |#{first_name} #{last_name}
                    .description
                        | @#{username}

template(name='when_template')
    div(title="{{ long_format timestamp }}")
        |#{when}


template(name='status_template')
    if open
        +icon name='inactive-state' title='Open'
    else
        +icon name='ok' title='Closed'

template(name='submitted_template')
    if submitted
        // .ui.basic.label Submitted
        div {{ long_format submitted_datetime }}
    // else
        // .ui.label Not Submitted

template(name='search_key')
    .ui.small.icon.input
        i.small.search.icon
        input.search_key(type='text')


template(name='sort_column_header')
    th.sort_by(class=classes)
        |#{label}
        if sort_descending
            i.chevron.down.link.blue.icon
        else if sort_ascending
            i.chevron.up.link.blue.icon
        else
            i.sort.link.grey.icon

template(name='query_input')
    .ui.icon.fluid.input
        if current_query
            i.clear_search.link.remove.icon
        else
            i.link.search.icon
        input#query(type='text' placeholder=placeholder value=current_query)
