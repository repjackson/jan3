template(name='office_header')
    with office_doc
        .ui.padded.stackable.grid
            .centered.middle.aligned.row
                .three.wide.center.aligned.column
                    if is_admin
                        +link_button link='/offices' icon='building' label='Offices'
                .ten.wide.column
                    h1.ui.center.aligned.header #{ev.MASTER_LICENSEE} Office
                .three.wide.right.aligned.column
                    // +edit_button
            .centered.row
                .sixteen.wide.center.aligned.column
                    .ui.horizontal.list
                        .item ##{ev.ID}
                        // .item Office Name
                        //     strong #{ev.MASTER_LICENSEE}
                        .item Owner
                            strong #{ev.MASTER_OFFICE_OWNER}
                        .item Manager
                            strong #{ev.MASTER_OFFICE_MANAGER}
                        // .item Last Updated
                        //     strong #{ev.TIMESTAMP}
                        .item #{ev.TELEPHONE}
                        .item 
                            |#{ev.ADDR_STREET} #{ev.ADDR_STREET_2} #{ev.ADDR_CITY} #{ev.ADDR_STATE} #{ev.ADDR_POSTAL_CODE} #{ev.MASTER_COUNTRY}
                            a(href=office_map_address target='_blank')
                                i.external.icon
            .centered.row
                unless is_customer
                    +office_nav

template(name='office_nav')
    .ui.five.item.stackable.borderless.pointing.menu
        // a.item(href="/view/#{_id}" isActivePath="/view/#{_id}")
        //     i.large.icon
        //         +iconsmall name='link-company-parent'
        //     | &nbsp; #{ev.MASTER_LICENSEE}
        a.item(href="/office/#{_id}/incidents" class="{{ is_current_route 'office_incidents'}}")
            i.large.icon
                +iconsmall name='error'
            | &nbsp; Incidents
        a.item(href="/office/#{_id}/employees" class="{{ is_current_route 'office_employees'}}")
            i.large.icon
                +iconsmall name='groups'
            | &nbsp; Employees
        a.item(href="/office/#{_id}/franchisees" class="{{ is_current_route 'office_franchisees'}}")
            i.large.icon
                +iconsmall name='conference'
            | &nbsp; Franchisees
        a.item(href="/office/#{_id}/customers" class="{{ is_current_route 'office_customers'}}")
            i.large.icon
                +iconsmall name='customer-support'
            | &nbsp; Customers
        a.item(href="/office/#{_id}/settings" class="{{ is_current_route 'office_settings'}}")
            i.large.icon
                +iconsmall name='settings'
            | &nbsp; Settings



template(name='office_view')
    +office_header



template(name='office_customers')
    +office_header
    // h2.ui.center.aligned.header 
    //     +icon name='customer-support'
    //     |Office Customers
    //     i#refresh_ny_customers.refresh.icon
    // +reactiveTable settings=settings class="ui celled striped sortable table"
    .ui.celled.striped.fluid.table
        thead
            th Customer Name
            th JPID
            th Franchisee
            th Contact Person
            th Contact Email
            th Telephone
            th Address
            th Timestamp
            th 
        tbody
            each office_customers
                tr
                    td #{ev.CUST_NAME}
                    td #{ev.ID}
                    td #{ev.FRANCHISEE}
                    td #{ev.CUST_CONT_PERSON}
                    td #{ev.CUST_CONTACT_EMAIL}
                    td #{ev.TELEPHONE}
                    td #{ev.ADDR_STREET}
                    td #{ev.TIMESTAMP}
                    td 
                        +view_button

template(name='office_incidents')
    +office_header
    // h2.ui.center.aligned.header Office Incidents
    .ui.celled.striped.fluid.table
        thead
            th Number
            th Office
            th Customer
            th Logged
            th Type
            th Details
            th Level
            th Submitted
            th 
        tbody
            each office_incidents
                tr
                    td #{incident_number}
                    td #{incident_office_name}
                    td #{customer_name}
                    td #{timestamp}
                    td 
                        +incident_type_label
                    td #{incident_details}
                    td #{level}
                    td
                        +submitted_template
                    td 
                        +view_button


template(name='office_employees')
    +office_header
    // h2.ui.center.aligned.header Office Employees
    +reactiveTable settings=settings collection=collection class="ui celled striped sortable table"

template(name='office_franchisees')
    +office_header
    // h2.ui.center.aligned.header 
    //     +icon name='conference'
    //     |Office Franchisees
    // +reactiveTable settings=settings class="ui celled striped sortable table"
    .ui.celled.striped.fluid.table
        thead
            th JPID
            th Name
            th Email
            th Short Name
            th Phone
            th 
        tbody
            each office_franchisees
                tr
                    td #{ev.ID}
                    td #{ev.FRANCHISEE}
                    td #{ev.FRANCH_EMAIL}
                    td #{ev.FRANCH_NAME}
                    td #{ev.TELE_CELL}
                    td 
                        +view_button
                    
                    

template(name='office_settings')
    .ui.stackable.divided.grid
        .row
            +office_header
        .row
            .eight.wide.column
                .ui.secondary.segment
                    h3.ui.header
                        +icon name='sms'
                        | &nbsp; Notices
                    +edit_textarea key='customer_message' label='Customer Dashboard Message'
                    +edit_text_field key='customer_promotions' label='Customer Dashboard Promotions Message'
                    +edit_text_field key='customer_special_services' label='Customer Dashboard Special Services'
            .eight.wide.column
                .ui.secondary.segment
                    h3.ui.header
                        +icon name='broom'
                        | &nbsp; Offered Services
                    +office_service_settings
        .row
            .sixteen.wide.column
                .ui.secondary.segment
                    h3.ui.header
                        +icon name='administrative-tools'
                        | &nbsp; SLA Settings
                    h5.ui.header Select Incident Types
                    each incident_types
                        .select_incident_type.ui.small.compact.button(class=select_incident_type_button_class) #{name}
                    if selected_incident_type
                        each rule_docs
                            .ui.secondary.segment
                                h4.ui.header #{name} for #{selected_incident_type} Rules
                                .ui.equal.width.grid
                                    unless is_initial
                                        .column
                                            +edit_number_field key=hours_key label='Escalation Hours' field_class='inline' min=0 max=24
                                    .column
                                        +toggle_boolean_checkbox key=franchisee_toggle_key label='Franchisee'
                                    .column
                                        // h4.ui.dividing.header Primary Contact
                                        +single_user_select key=primary_contact_key label="Primary Contact Employee Select"
                                    .column
                                        // h4.ui.dividing.header Secondary Contact
                                        +single_user_select key=secondary_contact_key label='Secondary Contact Employee Select'
            
template(name='office_service_settings')
    // h5.ui.header Select which to offer customers.
    each services
        .select_service.ui.button(class=select_service_button_class) #{title}