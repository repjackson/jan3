template(name='author_info')
    with author
        if profile.image_id
            img.ui.avatar.spaced.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
        |&nbsp;
        a(href="/user/#{username}") #{username} 
        // +staus_indicator
    // .ui.sub.header #{when}

template(name='when_template')
    |#{when}
    
template(name='last_updated_template')
    |{{ long_format last_updated_datetime }}
    
    

template(name='list_item')
    .item
        i.icon(class=icon title=key)
        .content
            .description 
                |#{label}
                strong #{key_value}


template(name='toggle_boolean')
    if is_on
        #turn_off.ui.active.compact.button #{yes_label}
    else
        #turn_on.ui.compact.basic.button #{no_label}



template(name='save_button')
    a.ui.icon.button(href="/v/#{_id}") 
        i.green.checkmark.icon
        // | Save
        
template(name='edit_button')
    a.ui.icon.button(href="/edit/#{_id}" title='Edit' class=classes) 
        i.pencil.icon
            // +icon name='pencil'
        // i.pencil.icon
        // | Edit

template(name='view_button')
    a.ui.icon.button(href="/v/#{_id}" data-content='View Details' class=classes) 
        // +icon name='details-pane'
        i.right.chevron.green.icon


template(name='icon_view')
    if icon
        +icon name=icon
        
        
template(name='view_page_button')
    a.ui.icon.button(href="/p/#{slug}" data-content='View Page' class=classes) 
        // +icon name='details-pane'
        i.right.chevron.blue.icon
        
template(name='view_office_button')
    a.ui.icon.button(href="/p/office_incidents/#{ev.ID}" data-content='View Office' class=classes) 
        // +icon name='details-pane'
        i.right.chevron.green.icon
        
template(name='view_user_button')
    a.ui.icon.button(href="/user/#{username}" title="View #{username}" class=classes) 
        // +avatar_sprite name='chevron-right'
        // +icon name='circled-chevron-right'
        i.right.chevron.green.icon
        
template(name='edit_user_button')
    a.ui.icon.button(href="/user/edit/#{_id}" title="Edit #{username}" class=classes) 
        // +icon name='circled-chevron-right'
        i.pencil.icon
        
template(name='add_button')
    #add.ui.icon.button(title='Add')
        i.plus.icon
        // +icon name='plus-math'

template(name='reference_type_single')
    .ui.form
        .field
            label #{label}
            .ui.left.icon.input
                i.search.icon
                // +inputAutocomplete settings=settings id="search" class="" autocomplete="off" placeholder='search...'

template(name='reference_type_multiple')
    .ui.form
        .field
            label #{label}
            .ui.left.icon.input
                i.search.icon
                // +inputAutocomplete settings=settings id="search" class="" autocomplete="off" placeholder="add..."

template(name='toggle_sla_boolean')      
    .ui.trigger.compact.button(class=toggle_boolean_button_class)
        +iconsmall name=icon
        
        


template(name="office_result")
    .item #{office_name} (#{jan_office_id})

template(name="customer_result")
    .item #{first_name} #{last_name}


template(name='set_view_mode')
    #set_view_mode.ui.icon.button(title=label class=view_mode_button_class)
        i.icon(class=icon)
            
            
template(name='set_session_button')
    .set_session_filter.ui.button(class=filter_class)
        strong #{label}
        
template(name='set_session_item')
    a.set_session_filter.item 
        |#{label}
        
        
        

template(name='toggle_key')
    .toggle_key.ui.compact.button(class=toggle_key_button_class) #{label}


template(name='view_full_button')
    a.floated.right(href="/v/#{_id}")
        // i.right.chevron.link.icon
        | View
                        
            

template(name='incidents_by_type')
    .ui.secondary.segment
        .ui.header 
            i.exclamation.circle.icon
            | Incidents
        .ui.list
            each typed_incidents
                .item
                    img.ui.avatar.image(src="{{c.url author.profile.image_id width=50 height=50 gravity='face' crop='fill'}}")
                    .content
                        a.header(href="/v/#{_id}") ##{incident_number} 
                        .description
                            |#{when}
            
template(name='associated_users')
    .ui.list
        each associated_users
            .item
                // .image
                //     img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                .content
                    .header
                        |#{profile.first_name} #{profile.last_name}
                    .description
                        | @#{username}
            
template(name='incident_assignment_cell')
    // td(class=incident_assignment_cell_class)
    td
        if overdue
            +icon name='expired' classes='inline' title='Over 5 Hours'
        if response
            |#{response}
        .ui.list
            each assigned_users
                .item
                    // .image
                    //     img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                    .content
                        .header
                            |#{profile.first_name} #{profile.last_name}
                        .description
                            | @#{username}
            
            
          
template(name='multiple_user_select')
    .ui.secondary.segment
        .ui.header 
            +icon name=icon
            |#{label}
        .ui.form
            .field
                .ui.icon.input
                    i.search.icon
                    input#multiple_user_select_input(type='text' placeholder='Search Office User')
            .ui.middle.aligned.selection.animated.list
                each user_results
                    .select_user.item
                        h4.ui.header
                            img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                            |#{username}
            .field
                .ui.list
                    each user_array_users
                        .item
                            .right.floated.content
                                i.pull_user.remove.red.link.icon
                            .image
                                img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                            .content
                                h4.ui.header
                                    |#{profile.first_name} #{profile.last_name}
                                    | @#{username}

          
template(name='many_doc_select')
    .ui.dividing.header #{label}
    .ui.form
        .field
            .ui.left.icon.input
                i.search.icon
                // +inputAutocomplete settings=settings id="search" class="ui list" autocomplete="off"
        .field
            .ui.list
                each doc_array_docs
                    .item
                        .right.floated.content
                            i.pull_user.remove.red.link.icon
                        .content
                            .header #{title} #{text} #{key} #{cust_name}
          
template(name='single_doc_select')
    .ui.dividing.header #{label}
    unless selected_doc
        .ui.form
            .field
                .ui.icon.transparent.input
                    i.handshake.icon
                    input#multiple_user_select_input(type='text' placeholder='Search Office User')
    with selected_doc
        .ui.fluid.card
            .content
                .header 
                    |#{cust_name}
                    .right.floated
                        i.remove_doc.remove.red.link.icon
            .content
                .ui.list
                    .item JPID: #{jpid}
                    .item Tel: #{telephone}
                    .item Contact Person: #{customer_contact_person}
                    .item Contact Email: #{customer_contact_email}
                    .item Franchisee: #{franchisee}
                    .item Master Licensee: #{master_licensee}
          
template(name='single_doc_view')
    .ui.secondary.segment
        .ui.header
            +icon name=icon
            |#{label}
        with selected_doc
            .ui.fluid.card
                .content
                    .header 
                        |#{ev.CUST_NAME}
                .content
                    .ui.list
                        .item JPID: #{ev.ID}
                        .item #{ev.ADDR_STREET}
                        .item #{ev.ADDR_CITY}
          
template(name='view_multiple_user')
    .ui.form
        .field
            label #{label}
        .field
            .ui.list
                each user_array_users
                    .item
                        .image
                            img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                        .content
                            .header
                                |#{profile.first_name} #{profile.last_name}
                            .description
                                | @#{username}
          
          
            
template(name='call_phone_button')
    a.ui.fluid.button(href="tel:#{phone_number}") 
        i.phone.icon
        | Call #{phone_number}
            
            
            
template(name='link_button')    
    a.ui.button(href=link title=label)
        // i.icon(class=icon)
        if icon
            i.icon
                +icon name=icon classes='centered'
        // i.left.chevron.icon
        | #{label}

        
template(name='edit_link')
    .field
        label link (include http://)
        .ui.left.icon.input
            i.linkify.icon
            input#link(type='text' value=url)


template(name='publish_button')
    .field
        label Status
        if published
            #unpublish.ui.green.button
                |Published
        else
            #publish.ui.button
                |Private


template(name='call_method')
    .call_method.ui.button 
        if label
            |#{label}
        else
            |#{name}
    
template(name='dusk_icon')
    img.ui.image(src="https://png.icons8.com/dusk/50/000000/#{name}.png")

template(name='icon')
    img.ui.mini.image(src="https://png.icons8.com/office/80/000000/#{name}.png" class=classes data-content=popup title=title)


template(name='iconlarge')
    img.ui.image(src="https://png.icons8.com/office/80/000000/#{name}.png")

template(name='iconsmall')
    img.ui.mini.inline.image(src="https://png.icons8.com/office/80/000000/#{name}.png" class=classes)





template(name='view_telephone_field')
    div
        a(href="tel:#{TELEPHONE}")
            i.phone.link.icon
        strong #{TELEPHONE} 
            
            
// template(name='call_phone_button')
//     a.ui.fluid.button(href="tel:#{phone_number}") 
//         i.phone.icon
//         | Call #{phone_number}
            
            
            

template(name='user_result')
    .ui.item
        .image
        .content
            .header
                img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                |#{profile.first_name} #{profile.last_name}
                small @#{username}


template(name='doc_result')
    with doc_context
        .ui.item
            .content
                .header #{title} #{text} #{cust_name}
                
template(name='message_button')                
    .ui.message
        .ui.header
            +icon name=icon
            a(href=link) #{label}

                    


template(name='toggle_user_published')
    #toggle_button.ui.icon.button(class=classes)
        if published
            i.green.circle.icon
        else
            i.circle.outline.icon
    

template(name='radio_item')      
    .field
        .ui.toggle.checkbox
            input(type="radio" name=key value=value checked=key_value)
            label #{label}


// template(name='session_delete_button')
//     unless confirming
//         .delete.ui.icon.button
//             i.remove.icon
//     else
//         .ui.icon.button.cancel 
//             i.ban.icon
//             // |Cancel
//         .ui.button.confirm 
//             i.red.trash.icon
//             |Confirm


// template(name='published')
//     if can_edit
//         #publish.ui.icon.compact.button(data-tooltip='Publish' class=published_class)
//             +icon name='visible' classes='ui mini inline image'
//         #unpublish.ui.icon.compact.button(data-tooltip='Unpublish' class=private_class)
//             +icon name='invisible' classes='ui mini inline image'
            
            
// template(name='subscribe_button')
//     if is_participant
//         #subscribe_button.ui.button(class=subscribe_buton_class)
//             if subscribed
//                 +icon48 name='checked' classes='ui mini inline image'
//                 | Subscribed
//             else
//                 +icon48 name='unchecked-checkbox' classes='ui mini inline image'
//                 |Not Subscribed
            
            
template(name='user_card')
    .ui.secondary.segment
        .ui.header Author
        with author
            img.ui.small.rounded.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
            h4 
                a(href="/user/#{username}") #{username}


template(name='customer_card')
    .ui.card
        with customer_doc
            .content
                a.ui.header(href="/v/#{_id}")
                    +icon name='headset'
                    |Customer Account
            .content
                a(href="/v/#{_id}")
                    h4.ui.header #{ev.CUST_NAME}
                .ui.list
                    .item ##{ev.ID}
                    .item #{ev.CUST_CONT_PERSON}
                    .item #{ev.CUST_CONTACT_EMAIL}
                    .item #{ev.TELEPHONE}
                    .item #{ev.ADDR_STREET}
                    .item #{ev.ADDR_STREET_2}
                    .item #{ev.ADDR_CITY} #{ev.ADDR_STATE}
            // .content
            //     div Franchisee
            //         strong #{ev.FRANCHISEE}
            //     div Office
            //         strong #{ev.MASTER_LICENSEE}


template(name='office_card')
    .ui.card
        with office_doc
            .content
                if is_customer
                    .ui.header 
                        +icon name='building'
                        |Office
                else
                    a(href="/p/office_incidents/#{ev.ID}")
                        .ui.header 
                            +icon name='building'
                            |Office
            .content
                if is_customer
                    h4.ui.header #{ev.MASTER_LICENSEE}
                else
                    a(href="/p/office_incidents/#{ev.ID}")
                        h4.ui.header #{ev.MASTER_LICENSEE}
                // div ##{ev.ID} 
                div #{ev.ADDR_STREET} #{ev.ADDR_STREET_2} 
                div #{ev.ADDR_CITY} #{ev.ADDR_STATE}
                div #{ev.ADDR_POSTAL_CODE} #{ev.MASTER_COUNTRY}
                div
                    a(href="tel:#{ev.TELEPHONE}") #{ev.TELEPHONE}


        
template(name='franchisee_card')
    .ui.card
        with franchisee_doc
            .content
                a(href="/v/#{_id}")
                    .ui.header 
                        +icon name='conference'
                        |Franchisee
            .content
                a(href="/v/#{_id}")
                    h4.ui.header #{ev.FRANCH_NAME}
                .ui.list
                    .item(title='JPID') ##{ev.ID}
                    .item #{ev.FRANCH_EMAIL}
                    // .item(title='Short Name') #{ev.FRANCH_NAME}
                    .item(title='Call Number')
                        a(href="tel:#{ev.TELE_CELL}") #{ev.TELE_CELL}



template(name='view_stat')
    |#{stat_value}


template(name='view_single_user_key')
    with single_user
        if profile.image_id
            img.ui.avatar.spaced.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
        |&nbsp;
        a(href="/user/#{username}") #{username} 
        // +staus_indicator
    // .ui.sub.header #{when}


template(name='assignment_widget')
    .ui.secondary.segment
        .ui.header 
            +icon name='user-shield'
            |Assignments
        p Last Assigned {{ long_format assignment_timestamp }}
        p {{ from_now assignment_timestamp }}
        // if overdue
        //     |overdue
        // else
        //     |not overdue
        .ui.form
            .field
                .ui.icon.input
                    i.search.icon
                    input#multiple_user_select_input(type='text' placeholder='Search Office User')
            .ui.middle.aligned.selection.animated.list
                each user_results
                    .select_user.item
                        h4.ui.header
                            img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                            |#{username}
            .field
                .ui.list
                    each assigned_users
                        .item
                            .right.floated.content
                                i.pull_user.remove.red.link.icon
                            .image
                                img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                            .content
                                h4.ui.header
                                    |#{profile.first_name} #{profile.last_name}
                                    | @#{username}


                                            
template(name='blocks')
    if editing_mode
        #add_block.ui.button(title="Add Block #{tags}")
            i.plus.icon
            |Child Block
    each blocks
        +block 
                                            
template(name='block')
    if can_view_block
        .ui(class=block_classes)
            .ui.grid
                .row
                    .left.aligned.ten.wide.column
                        if view_title
                            .ui.header
                                if icon
                                    +icon name=icon
                                |#{title}
                    .right.aligned.six.wide.column
                        if view_add_button
                            .ui.add_block_child.icon.button
                                i.plus.icon
            if custom_template
                +Template.dynamic template=custom_template
            else
                if is_cards
                    .ui.centered.three.stackable.cards
                        each children
                            .ui.card
                                if title
                                    .content
                                        a.grey.header(href="/v/#{_id}")
                                            if icon
                                                +icon name=icon
                                            |#{title} 
                                .content
                                    .ui.list
                                        each ../fields
                                            .item
                                                if field_template
                                                    +Template.dynamic template=field_template data=..
                                                else
                                                    | #{child_schema_field_value}
                                .content
                                    each ../actions
                                        .ui.icon.button(title=title)
                                            i.icon
                                                +icon name=icon
                                    // +edit_button
                                    // +view_button
                if is_table
                    if view_table_header
                        .middle.aligned.row
                            .ui.middle.aligned.stackable.grid
                                .four.wide.column
                                    +query_input
                                if no_query
                                    .three.wide.column
                                        .table_stats #{skip_amount}-#{end_result} / #{count_amount}
                                    .five.wide.column
                                        if show_10
                                            .set_10.ui.basic.compact.button(class="{{page_size_button_class '10'}}" title='View 10') 10
                                        if show_20
                                            .set_20.ui.basic.compact.button(class="{{page_size_button_class '20'}}" title='View 20') 20
                                        if show_50
                                            .set_50.ui.basic.compact.button(class="{{page_size_button_class '50'}}" title='View 50') 50
                                        if show_100
                                            .set_100.ui.basic.compact.button(class="{{page_size_button_class '100'}}" title='View 100') 100
                                    .four.wide.column
                                        if pages
                                            .ui.right.floated.pagination.small.menu
                                                if show_decrement
                                                    a.icon.item.decrement_page
                                                        i.left.chevron.grey.icon
                                                .ui.simple.dropdown.item
                                                    | #{current_page}
                                                    .menu
                                                        each pages
                                                            a.set_page_number.item(class=pagination_item_class) #{number}
                                                if show_increment
                                                    a.icon.item.increment_page
                                                        i.right.chevron.grey.icon
                    
                    table.ui.striped.selectable.fixed.table
                        thead
                            tr
                                each fields
                                    if sortable
                                        th.sort_by
                                            |#{label}
                                            if sort_descending
                                                i.chevron.down.link.blue.icon
                                            else if sort_ascending
                                                i.chevron.up.link.blue.icon
                                            else
                                                i.sort.link.grey.icon
                                    else
                                        th
                                            |#{label}
                        tbody
                            each children
                                tr
                                    each ../fields
                                        if field_template
                                            td(style="overflow:visible;") 
                                                +Template.dynamic template=field_template data=..
                                        else
                                            td(class=table_cell_class) #{child_schema_field_value}
                                        
                        if view_table_footer
                            +table_footer columns=fields.length doc_type=children_doc_type stat_type=table_stat_type
                if is_list
                    .ui.divided.list
                        each children
                            .item
                                .ui.horizontal.list
                                    each ../fields
                                        .item
                                            if field_template
                                                +Template.dynamic template=field_template data=..
                                            else
                                                | #{child_schema_field_value}
                if is_grid
                    .ui.equal.width.four.column.stackable.grid
                        each children
                            .column
                                .ui.secondary.segment
                                    if title
                                        a.ui.header(href="/p/#{slug}")
                                            if icon
                                                i.icon  
                                                    +icon name=icon
                                            |#{title}    
                                    .ui.list
                                        each ../fields
                                            .item
                                                if field_template
                                                    +Template.dynamic template=field_template data=..
                                                else
                                                    | #{child_schema_field_value}
                if is_comments
                    .ui.comments
                        each children
                            +doc_history_event
                if is_header
                    .centered.middle.aligned.row
                        .three.wide.center.aligned.column
                            if is_admin
                                +link_button link='/p/admin' icon='user-shield' label='Admin'
                        .ten.wide.column
                            h2.ui.center.aligned.grey.header 
                                +icon name='code'
                                |Dev
                        .three.wide.right.aligned.column
            if editing_mode
                .toggle_editing_block.ui.icon.button
                    i.pencil.icon
            if editing_block
                +edit_block

template(name='edit_block')
    .ui.tertiary.segment
        h3.ui.header 
            +icon name=icon
            |Edit '#{title}' Block
        .ui.top.attached.tabular.secondary.menu
            a.active.item(data-tab='general') 
                i.pencil.icon
                |General
            a.item(data-tab='filter') 
                i.filter.icon
                |Filter
            a.item(data-tab='schema') 
                i.fork.icon
                |Schema
            a.item(data-tab='collection') 
                i.database.icon
                |Collection
            a.item(data-tab='view') 
                i.object.group.icon
                |View
            a.item(data-tab='fields') 
                i.list.ui.icon
                |Fields
        .ui.bottom.attached.active.tab.secondary.segment(data-tab='general')
            i.remove_block.remove.link.icon(title='remove block')
            +toggle_boolean key='published' yes_label='Published' no_label='Private'
            +toggle_boolean key='view_title' yes_label='Title' no_label='No Title'
            +toggle_boolean key='view_add_button' yes_label='Add Button' no_label='No Add Button'
            | Order
            +set_key_value key='rank' value=1 label='1'
            +set_key_value key='rank' value=2 label='2'
            +set_key_value key='rank' value=3 label='3'
            +set_key_value key='rank' value=4 label='4'
            +set_key_value key='rank' value=5 label='5'
            .ui.form
                .fields
                    +edit_block_text_field label='Title' key='title'
                    +edit_block_text_field label='Icon' key='icon'
                    +edit_block_text_field label='Classes' key='block_classes'
                .fields
                    +edit_block_text_field label='Slug' key='slug'
                    +edit_block_text_field label='Parent Slug' key='parent_slug'
                    +edit_block_text_field label='Custom Template' key='custom_template'
            h5 doc id #{_id}
        .ui.bottom.attached.tab.secondary.segment(data-tab='filter')
            .ui.form
                +edit_block_text_field label='Hard Limit' key='hard_limit'
                +edit_block_text_field label='Soft Limit' key='limit'
                +set_key_value key='filter_status' value="ACTIVE" label='Active Status'
                +set_key_value key='filter_status' value="" label='All'
                div
                +edit_block_text_field label='Filter Key' key='filter_key'
                div Source
                +set_key_value key='filter_source' value='{page_slug}' label='Page Slug'
                +set_key_value key='filter_source' value='{doc_id}' label='Doc ID'
                +set_key_value key='filter_source' value='{current_user}' label='Current User'
                div
                +edit_block_text_field label='Filter Value' key='filter_value'
                +set_key_value key='filter_value' value='{source_key}' label='Source Key'
                +set_key_value key='filter_value' value=true label='true'
                +set_key_value key='filter_value' value=false label='false'
                div
                div
                +edit_block_text_field key='filter_source_key' label='Filter Source Key'
        // unless custom_template
        .ui.bottom.attached.tab.secondary.segment(data-tab='collection')
            each collections
                +set_key_value_2 key='children_collection' value=slug label=title icon=icon
        .ui.bottom.attached.tab.secondary.segment(data-tab='schema')
            each schemas
                +set_key_value_2 key='children_doc_type' value=slug label=title icon=icon
            .ui.header Stat Type
            +set_key_value key='table_stat_type' value='total' label='Total'
            +set_key_value key='table_stat_type' value='office' label='Office'
        .ui.bottom.attached.tab.secondary.segment(data-tab='view')
            each views
                +set_key_value_2 key='view' value=slug label=title icon=icon
            +toggle_boolean key='view_table_header' yes_label='Table Header' no_label='No Table Header'
        .ui.bottom.attached.tab.secondary.segment(data-tab='fields')
            h4 Available Schema Fields
            each schema_doc.fields
                if show_schema_field
                    .add_schema_field.ui.compact.button #{title}
            h4 Shown Fields
                .add_blank_field.ui.icon.button(title='Add Blank Field')
                    i.plus.icon
            if fields
                table.ui.striped.fixed.table
                    thead
                        tr
                            th.one.wide #
                            th Key
                            th Label
                            th Template
                            th Sortable
                            th Remove
                    tbody
                        each fields
                            tr
                                td
                                    i.move_down.chevron.up.link.icon
                                    // i.move_up.chevron.down.link.icon
                                td #{key}
                                td 
                                    .ui.fluid.small.input
                                        input.field_label(type='text' value=label)
                                td 
                                    .ui.fluid.small.input
                                        input.field_template(type='text' value=field_template)
                                td 
                                    +set_field_key_value key='sortable' value=true label='Y'
                                    |#{sortable}
                                    +set_field_key_value key='sortable' value=false label='N'
                                td 
                                    i.remove_schema_field.remove.link.icon


     
template(name='child_card')
    .ui.card
        .content
            a.header(href="/v/#{_id}") 
                if image_id
                    img.ui.avatar.image(src="{{c.url image_id height=100 width=100 crop='scale'}}")
                    // .right.floated.meta $#{price}
                if icon
                    +icon name=icon
                |#{title}
            if is_admin
                .meta #{slug}
            .description
                p #{description}
        if request_count
            .content
                | #{request_count} requests
        .content
            +request_service_button
            a.ui.button(href="/v/#{_id}") 
                i.large.icon
                    +iconsmall name='view-details'
                |Details
    
template(name='child_item')
    .item
        if image_id
            a.image(href="/v/#{_id}")
                img.ui.tiny.image(src="{{c.url image_id height=200 width=200 crop='scale'}}")
        .content
            // .right.floated.meta $#{price}
            a.header(href="/v/#{_id}") #{title}
            if is_admin
                .meta #{slug}
            .description
                p #{description}
        // if request_count
        //     .content
        //         | #{request_count} requests
        .content
            +request_service_button
            a.ui.button(href="/v/#{_id}") 
                i.large.icon
                    +iconsmall name='view-details'
                |Details
     
     
     
        
template(name='edit_block_text_field')
    .inline.field
        label #{label}
        input.text_field(type='text' value=block_key_value)
        
        
        
template(name='set_key_value')
    .set_key_value.ui.small.compact.button(class=set_value_button_class) 
        if icon
            i.icon
                +icon name=icon
        |#{label}
        
        
template(name='set_page_key_value')
    .set_page_key_value.ui.compact.button(class=set_value_button_class) 
        if icon
            i.icon
                +icon name=icon
        |#{label}


        
template(name='set_field_key_value')
    .set_field_key_value.ui.compact.button(class=set_value_button_class) #{label}
        
        
template(name='set_key_value_2')
    .set_key_value.ui.button(class=set_value_button_class) 
        if icon
            i.icon
                +icon name=icon
        |#{label}
        
        
template(name='event_type_icon')
    if event_type_doc.icon
        +icon name=event_type_doc.icon
        |#{event_type}
    else
        +icon name='commit-git'
        |#{event_type}



template(name='user_avatar')
    img.ui.avatar.image(src="{{c.url image_id height=200 width=200 crop='fill' gravity='face'}}")
    .ui.popup
        img.ui.small.image(src="{{c.url image_id height=500 width=500 crop='fill' gravity='face'}}")
    // a(href="/user/#{username}") #{first_name} #{last_name}
