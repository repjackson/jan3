import { Meteor } from 'meteor/meteor'


Template.office_contact_cards.helpers({
  office_contacts: function() {
    var customer_doc, found, user;
    user = Meteor.user();
    if (user && user.profile && user.profile.customer_jpid) {
      customer_doc = Docs.findOne({
        "ev.ID": user.profile.customer_jpid,
        type: 'customer'
      });
      if (customer_doc) {
        found = Meteor.users.find({
          published: true
        }, {
          limit: 100
        });
        return found;
      }
    }
  }
});

Template.dashboard.events({
  'click .log_ticket': function(e, t) {
    var my_customer_ob, new_incident_id;
    my_customer_ob = Meteor.user().users_customer();
    console.log(my_customer_ob);
    if (my_customer_ob) {
      new_incident_id = Docs.insert({
        type: 'incident',
        customer_jpid: my_customer_ob.ev.ID,
        customer_name: my_customer_ob.ev.CUST_NAME,
        incident_office_name: my_customer_ob.ev.MASTER_LICENSEE,
        level: 1,
        open: true,
        submitted: false
      });
      return FlowRouter.go("/view/" + new_incident_id);
    }
  }
});

Template.dashboard_office_contacts_list.onCreated(function() {
  return this.autorun(function() {
    return Meteor.subscribe('my_office_contacts');
  });
});

Template.dashboard_office_contacts_list.helpers({
  office_contacts: function() {
    var customer_doc, found, user;
    user = Meteor.user();
    if (user && user.profile && user.profile.customer_jpid) {
      customer_doc = Docs.findOne({
        "ev.ID": user.profile.customer_jpid,
        type: 'customer'
      });
      if (customer_doc) {
        found = Meteor.users.find({
          published: true
        }, {
          limit: 100
        });
        return found;
      }
    }
  }
});

Template.customer_special_services.onCreated(function() {
  return this.autorun(function() {
    return Meteor.subscribe('my_special_services');
  });
});

Template.customer_special_services.helpers({
  my_special_services: function() {
    return Docs.find({
      type: 'special_service'
    });
  }
});

Template.customer_incidents_widget.onCreated(function() {
  return this.autorun(function() {
    return Meteor.subscribe('my_customer_incidents');
  });
});

Template.customer_incidents_widget.helpers;

Template.customer_incidents_widget.helpers({
  customer_incidents: function() {
    return Docs.find({
      type: 'incident'
    });
  },
  settings: function() {
    return {
      rowsPerPage: 5,
      showFilter: true,
      showRowCount: true,
      fields: [
        {
          key: 'customer_name',
          label: 'Customer'
        }, {
          key: 'incident_office_name',
          label: 'Office'
        }, {
          key: '',
          label: 'Type',
          tmpl: Template.incident_type_label
        }, {
          key: 'when',
          label: 'Logged'
        }, {
          key: 'incident_details',
          label: 'Details'
        }, {
          key: 'level',
          label: 'Level'
        }, {
          key: 'status',
          label: 'Status',
          tmpl: Template.status_template
        }, {
          key: 'status',
          label: 'Submitted',
          tmpl: Template.submitted_template
        }, {
          key: '',
          label: 'Assigned To',
          tmpl: Template.associated_users
        }, {
          key: '',
          label: 'View',
          tmpl: Template.view_button
        }
      ]
    };
  }
});

// ---
// generated by coffee-script 1.9.2