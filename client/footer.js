var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Template.role_switcher.onCreated(function() {
  return this.autorun(function() {
    return Meteor.subscribe('type', 'role');
  });
});

Template.role_switcher.helpers({
  role_docs: function() {
    return Docs.find({
      type: 'role'
    });
  },
  role_button_class: function() {
    var ref;
    if (Meteor.user() && Meteor.user().roles && (ref = this.name, indexOf.call(Meteor.user().roles, ref) >= 0)) {
      return 'blue';
    } else {
      return '';
    }
  }
});

Template.footer.helpers({
  site_doc: function() {
    var site_doc;
    site_doc = Docs.findOne(Session.get('current_site_id'));
    if (site_doc) {
      return site_doc;
    }
  },
  bug_link: function() {
    return Session.get('bug_link');
  }
});

Template.footer.events({
  "click #report_bug": function() {
    Session.set('bug_link', window.location.pathname);
    return $('.ui.report.modal').modal({
      inverted: true,
      duration: 400,
      onApprove: function() {
        var val;
        val = $("#bug_description").val();
        Docs.insert({
          type: 'bug',
          complete: false,
          body: val,
          link: window.location.pathname
        });
        return $("#bug_description").val('');
      }
    }).modal('show');
  }
});

Template.role_switcher.events({
  'click .change_role': function() {
    var cursor;
    cursor = Docs.find({
      type: 'role'
    }).fetch();
    Meteor.users.update(Meteor.userId(), {
      $set: {
        roles: [this.name]
      }
    });
    return location.reload();
  }
});

// ---
// generated by coffee-script 1.9.2