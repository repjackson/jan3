template(name='ev')
    .ui.padded.stackable.grid
        .row
            .sixteen.wide.column
                h1.ui.center.aligned.header
                    | EV API
                .ui.four.stackable.cards
                    +children_widget type='report' label='Reports' icon='newspaper' link='/reports'
                    +children_widget type='field' label='Fields' icon='cubes' link='/ev_fields'
                    +children_widget type='user' label='Users' icon='users' link='/ev_users'
                    +children_widget type='jpid' label='JP Ids' icon='hashtag' link='/jpids'
                    +children_widget type='area' label='Areas' icon='clone' link='/areas'
                    +children_widget type='meta' label='MetaData' icon='code' link='/meta'

template(name='ev_reports')
    .ui.padded.stackable.grid
        .row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .ten.wide.column
                .ui.center.aligned.header
                    | EV Reports
                // .call_ev.ui.fluid.button Call EV API
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Reports selector=selector class="ui sortable fluid striped table"}}

                    
                    
template(name='ev_card')                    
    .card
        if report_title
            .content
                a.header(href="/view/#{_id}") #{report_title}
                .meta #{report_subtitle}
        .content
            with ev
                if CUSTOMER
                    +view_customer_name_field
                if CUST_NAME
                    +view_customer_name_field
                if TELEPHONE
                    +view_telephone_field
                if MASTER_LICENSEE
                    +view_master_field
                if FRANCHISEE
                    +view_franchisee_field
                if FRANCH_NAME
                    +view_franchisee_field
            .ui.list
                if report_id
                    .item id: #{report_id}
                    .item type: #{report_type}
                if children.count
                    .item #{children.count} Child Docs
            if ADDR_STREET
                .ui.list
                    .item #{ADDR_STREET}
                    .item #{ADDR_CITY}, #{ADDR_STATE}
                    .item #{ADDR_POSTAL_CODE}
                    .item #{CUST_REG_SERVICE_AMT}
        // .content
        //     +jsonView json=ev    
        .content
            +view_button
            +edit_button
                
template(name='report_edit')
    .ui.padded.stackable.centered.grid
        .centered.middle.aligned.row
            .four.wide.column
                h1.ui.center.aligned.grey.header Edit ##{report_id} #{report_title} Report
                +save_button
                #delete.ui.icon.button
                    i.trash.icon
            .twelve.wide.column
                .ui.form
                    // +edit_text_field key='text' label='Title'
                    // +edit_text_field key='image_url' label='Image URL'
                    // +edit_text_field key='icon' label='Icon'
                    +edit_array_field key='tags' label='Relationship to parent'
                    +edit_html
        
template(name='report_view')
    .ui.padded.stackable.centered.grid
        .centered.middle.aligned.row
            .three.wide.column
                +link_button link='/reports' icon='newspaper' label='Reports'
            .ten.wide.column
                h1.ui.center.aligned.grey.header ##{report_id} #{report_title} Report
            .three.wide.column
                +edit_button
                unless children.length
                    .run_report.ui.button
                        i.refresh.icon
                        |Run Report
        .centered.row
            .sixteen.wide.column
                .ui.segment
                    each tags
                        .ui.basic.label #{this}
                    .ui.basic.segment
                        // |#{current_doc}
                        .ui.list
                            .item report id: #{report_id}
                            .item report_type: #{report_type}
                            .item report_subtitle: #{report_subtitle}
                .ui.centered.cards
                    each children
                        +ev_card
                        
template(name='view_customer_name_field')
    div
        a(href="/customer/#{CUSTOMER}")
            i.handshake.icon(title='Customer')
            |#{CUSTOMER}

template(name='view_master_field')
    h4
        a(href="/master/#{MASTER_LICENSEE}" title='Master Licensee')
            i.street.view.icon
            |#{MASTER_LICENSEE}


template(name='view_franchisee_field')
    h4
        if FRANCH_NAME
            a(href="/franchisee/#{FRANCH_NAME}" title='Franchisee')
                i.user.circle.icon
                | #{FRANCH_NAME}
        if FRANCHISEE
            a(href="/franchisee/#{FRANCHISEE}" title='Franchisee')
                i.user.circle.icon
                | #{FRANCHISEE}


template(name='children_widget')
    .ui.card
        .content
            a.ui.center.aligned.header(href=link)
                // i.icon(class=icon)
                .content
                    |#{label}
            .ui.list
                each children
                    a.item(href="/view/#{_id}") #{name} #{title} !{html}
    
    
template(name='ev_fields')
    .ui.padded.stackable.grid
        .row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .ten.wide.column
                .ui.center.aligned.header
                    | EV Fields
            .three.wide.column
                if is_dev
                    .sync_ev_fields.ui.fluid.button Sync EV Fields
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Fields selector=selector class="ui sortable fluid striped table"}}


template(name='ev_users')
    .ui.padded.stackable.grid
        .middle.aligned.row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .ten.wide.column
                h1.ui.center.aligned.header
                    i.users.icon
                    | EV Users
            .three.wide.column
                if is_dev
                    .sync_ev_users.ui.fluid.button 
                        i.refresh.icon
                        |Sync
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.EV_users selector=selector class="ui sortable fluid striped table"}}


template(name='user_view')
    .ui.padded.stackable.centered.grid
        .centered.middle.aligned.row
            .three.wide.column
                +link_button link='/ev_users' icon='newspaper' label='users'
            .ten.wide.column
                h1.ui.center.aligned.grey.header ##{user_id} #{user_title} user
            .three.wide.column
                unless children.length
                    .get_user_info.ui.button
                        i.refresh.icon
                        | Get User Info
        .centered.row
            .sixteen.wide.column
                .ui.segment
                    each tags
                        .ui.basic.label #{this}
                    .ui.basic.segment
                        // |#{current_doc}
                        .ui.list
                            .item user id: #{user_id}
                            .item user_type: #{user_first_name}
                            .item user_subtitle: #{user_last_name}
                    +jsonView json=ev
      
      
template(name='jpid_view')
    .ui.padded.stackable.centered.grid
        .centered.middle.aligned.row
            .three.wide.column
                +link_button link='/jpids' icon='hashtag' label='JP Ids'
            .ten.wide.column
                h1.ui.center.aligned.grey.header ##{jpid} JP Id
            .three.wide.column
                .refresh_jpid.ui.icon.button(title='Refresh JP ID Doc')
                    i.refresh.icon
        .centered.row
            .sixteen.wide.column
                +jsonView json=ev
            
            
template(name='jpids')
    .ui.padded.stackable.grid
        .row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .eight.wide.column
                .ui.center.aligned.header
                    i.hashtag.icon
                    | JP Id's
            .four.wide.column
                .ui.icon.input
                    i.search.icon  
                    input#jp_lookup(type='text' placeholder='Lookup Jan-Pro Id')
                // .ui.icon.input
                //     i.search.icon  
                //     input#office_lookup(type='text' placeholder='Lookup Office Name')
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Jpids selector=selector class="ui sortable fluid striped table"}}

                    
                    
template(name='areas')
    .ui.padded.stackable.grid
        .row
            .two.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .fourteen.wide.column
                .ui.center.aligned.header
                    i.clone.icon
                    | Areas
                p
                    |This key concept is used to define a structure where you may define multiple tracking systems within a single instance of ExtraView. Each of these tracking systems is termed a Business Area, and each of these Business Areas may have its own set of screens, fields, processes, rules and workflow. Business Areas may also share these objects. An administrator may have control over the entire installation or sub-administrator roles may be created, each having control over a part of the installation. With this capability, ExtraView is termed a multi-tenanted database.
                    a(href='https://docs.extraview.com/site/extraview-111/administration-guide/key-concepts/business-areas' target='_window') 
                        |Documentation
                        i.external.icon
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Areas selector=selector class="ui sortable fluid striped table"}}

                    
                    
template(name='meta')
    .ui.padded.stackable.grid
        .middle.aligned.row
            .two.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .fourteen.wide.column
                h1.ui.center.aligned.header
                    i.code.icon
                    | EV MetaData
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Meta selector=selector class="ui sortable striped table"}}

                    
                    
template(name='meta_view')
    .ui.padded.stackable.centered.grid
        .centered.middle.aligned.row
            .three.wide.column
                +link_button link='/meta' icon='code' label='meta'
            .ten.wide.column
                h1.ui.center.aligned.grey.header ##{jpid} meta view
            .three.wide.column
                // +edit_button
        .centered.row
            .sixteen.wide.column
                +jsonView json=ev
            
            

template(name='franchisees')
    .ui.padded.stackable.grid
        .middle.aligned.row
            .four.wide.column
                // +link_button link='/ev' icon='database' label='EV'
            .eight.wide.column
                h1.ui.center.aligned.header
                    +officeiconlarge name='collaborator-female'
                    | Franchisees
            .four.wide.column
                if is_dev
                    .get_all_franchisees.ui.icon.button
                        i.refresh.icon
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Franchisees selector=selector class="ui sortable striped very basic fluid table"}}

                    
                    
template(name='franchisee_view')
    .ui.padded.stackable.grid
        .centered.middle.aligned.row
            .three.wide.column
                +link_button link='/franchisees' icon='user circle' label='Franchisees'
            .ten.wide.column
                h1.ui.center.aligned.grey.header #{ev.FRANCHISEE} Franchisee View
            .three.wide.right.aligned.column
                +edit_button
        .centered.row
            +office_by_franchisee
        .centered.row
            .twelve.wide.column
                .ui.secondary.segment
                    .ui.header Franchisee Name: #{ev.FRANCHISEE}
                    .ui.header JPID ##{ev.ID}
                    .ui.header Email: #{ev.FRANCH_EMAIL}
                    .ui.header Short Name: #{ev.FRANCH_NAME}
                    .ui.header Cell: #{ev.TELE_CELL}
                    .ui.header Master Licensee: #{ev.MASTER_LICENSEE}
                +related_customers

template(name='customers')
    .ui.padded.stackable.grid
        .middle.aligned.row
            .three.wide.column
                +link_button link='/ev' icon='database' label='EV Dash'
            .ten.wide.column
                h1.ui.center.aligned.header
                    | Customers
            .three.wide.right.aligned.column
                if is_dev
                    .sync_customers.ui.icon.button(title='Refresh Customers')
                        i.refresh.icon
        .row
            .sixteen.wide.column
                |{{> tabular table=TabularTables.Customers selector=selector class="ui sortable striped very basic fluid table"}}

                    
                    
template(name='customer_view')
    .ui.padded.stackable.grid
        .centered.middle.aligned.row
            .three.wide.column
                +link_button link='/customers' icon='handshake' label='Customers'
            .ten.wide.column
                h1.ui.center.aligned.grey.header ##{jpid} #{cust_name} Customer
            .three.wide.right.aligned.column
                +edit_button
        .centered.row
            .twelve.wide.column
                +franchise_by_customer
        .centered.row
            .twelve.wide.column
                .ui.secondary.segment
                    // h4.ui.header Name: #{cust_name}
                    // h4.ui.header Master Licensee: #{master_licensee}
                    // h4.ui.header Contact Person: #{customer_contact_person}
                    // h4.ui.header Contact Email: #{customer_contact_email}
                    // h4.ui.header Tel: #{telephone}
                    // h4.ui.header Franchisee: #{franchisee}
                    with ev
                        .ui.header #{CUST_NAME}
                        div Master Licensee
                            strong #{MASTER_LICENSEE}
                        div JP ID
                            strong #{ID}
                        div Customer Contact Person
                            strong #{CUST_CONT_PERSON}
                        div Customer Contact Email
                            strong #{CUST_CONTACT_EMAIL}
                        div Tel
                            strong #{TELEPHONE}
                        div Address
                            strong #{ADDR_STREET}
                        div    
                            strong #{ADDR_STREET_2}
                        div 
                            strong #{ADDR_CITY} #{ADDR_STATE}
                        div Franchisee
                            strong #{FRANCHISEE}
                        div Number of Days of Service
                            strong #{CUST_NUM_DAYS_SERVICE}
                        div Days Service
                            strong #{CUST_DAYS_SERVICE}
                        div Regular Service Amount
                            strong #{CUST_REG_SERVICE_AMT}

                
                
                
template(name='related_customers')
    .ui.horizontal.divider.header 
        i.handshake.icon
        |#{franchisee}'s Customers
    |{{> tabular table=TabularTables.Related_customers selector=selector class="ui sortable fluid striped table"}}
                
template(name='franchise_by_customer')
    .ui.dividing.header 
        i.user.circle.icon
        |#{ev.CUST_NAME}'s Franchisee
    |{{> tabular table=TabularTables.Related_franchisees selector=selector class="ui sortable fluid striped table"}}
    
    
template(name='office_by_franchisee')
    .ui.secondary.segment
        .ui.dividing.header 
            i.building.icon
            |#{ev.FRANCHISEE}'s Office
        with parent_office
            a.ui.header(href="/view/#{_id}") #{office_name}
    
    
    